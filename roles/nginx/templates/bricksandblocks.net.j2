upstream jellyfin {
    server 192.168.2.27:8096 fail_timeout=0;
}

upstream unifi {
    server 192.168.2.1:443 fail_timeout=0;
}

server {
    listen 443 ssl http2;

    server_name bricksandblocks.net;

    location / {
        proxy_set_header  Host $host:$server_port;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass        https://unifi;
        proxy_redirect    http:// https://;
        add_header Pragma "no-cache";
    }

    ssl_certificate     /etc/nginx/certs/{{ nginx_domain }}.cer;
    ssl_certificate_key /etc/nginx/private/{{ nginx_domain }}.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload" always;
}

server {
    listen 443 ssl;

    server_name chat.bricksandblocks.net;

    auth_basic           "Members Only Area";
    auth_basic_user_file /etc/nginx/.htpasswd; 

    location / {
        proxy_set_header  Host $host:$server_port;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass        http://192.168.2.38:8008/;
        proxy_redirect    http:// https://;
        add_header Pragma "no-cache";
    }

    ssl_certificate     /etc/nginx/certs/{{ nginx_domain }}.cer;
    ssl_certificate_key /etc/nginx/private/{{ nginx_domain }}.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload" always;
}

server {
    listen 443 ssl;

    server_name jellyfin.bricksandblocks.net;

    location / {
        proxy_set_header  Host $host:$server_port;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass        http://jellyfin;
        proxy_redirect    http:// https://;
        add_header Pragma "no-cache";
    }

    ssl_certificate     /etc/nginx/certs/{{ nginx_domain }}.cer;
    ssl_certificate_key /etc/nginx/private/{{ nginx_domain }}.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload" always;
}

server {
    listen 443 ssl;

    server_name kavita.bricksandblocks.net;

    location / {
        proxy_set_header  Host $host:$server_port;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass        http://192.168.2.32:5000/;
        proxy_redirect    http:// https://;
        add_header Pragma "no-cache";
    }

    ssl_certificate     /etc/nginx/certs/{{ nginx_domain }}.cer;
    ssl_certificate_key /etc/nginx/private/{{ nginx_domain }}.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload" always;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name nas.bricksandblocks.net;

    client_max_body_size 0;

    location / {
        proxy_hide_header Upgrade;
        proxy_hide_header X-Powered-By;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass        https://192.168.2.18:5001/;
        proxy_redirect    off;
    }

    ssl_certificate     /etc/nginx/certs/{{ nginx_domain }}.cer;
    ssl_certificate_key /etc/nginx/private/{{ nginx_domain }}.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload" always;
}

server {
    if ($host = bricksandblocks.net) {
        return 301 https://$host$request_uri;
    }

    listen 80;

    server_name bricksandblocks.net;
    return 404;
}

server {
    if ($host = chat.bricksandblocks.net) {
        return 301 https://$host$request_uri;
    }

    listen 80;

    server_name chat.bricksandblocks.net;
    return 404;
}

server {
    if ($host = jellyfin.bricksandblocks.net) {
        return 301 https://$host$request_uri;
    }

    listen 80;

    server_name jellyfin.bricksandblocks.net;
    return 404;
}

server {
    if ($host = kavita.bricksandblocks.net) {
        return 301 https://$host$request_uri;
    }

    listen 80;

    server_name kavita.bricksandblocks.net;
    return 404;
}

server {
    if ($host = nas.bricksandblocks.net) {
        return 301 https://$host$request_uri;
    }

    listen 80;

    server_name nas.bricksandblocks.net;
    return 404;
}